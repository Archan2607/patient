node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1000
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 250
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "enqueue_input/Placeholder"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_3"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_4"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_5"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_6"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_7"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_8"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_9"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_10"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_11"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_12"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_13"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/Placeholder_14"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "enqueue_input/Placeholder"
  input: "enqueue_input/Placeholder_1"
  input: "enqueue_input/Placeholder_2"
  input: "enqueue_input/Placeholder_3"
  input: "enqueue_input/Placeholder_4"
  input: "enqueue_input/Placeholder_5"
  input: "enqueue_input/Placeholder_6"
  input: "enqueue_input/Placeholder_7"
  input: "enqueue_input/Placeholder_8"
  input: "enqueue_input/Placeholder_9"
  input: "enqueue_input/Placeholder_10"
  input: "enqueue_input/Placeholder_11"
  input: "enqueue_input/Placeholder_12"
  input: "enqueue_input/Placeholder_13"
  input: "enqueue_input/Placeholder_14"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "enqueue_input/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "enqueue_input/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "enqueue_input/sub"
  op: "Sub"
  input: "enqueue_input/random_shuffle_queue_Size"
  input: "enqueue_input/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "enqueue_input/Maximum"
  op: "Maximum"
  input: "enqueue_input/Maximum/x"
  input: "enqueue_input/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/Cast"
  op: "Cast"
  input: "enqueue_input/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0013333333
      }
    }
  }
}
node {
  name: "enqueue_input/mul"
  op: "Mul"
  input: "enqueue_input/Cast"
  input: "enqueue_input/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
      }
    }
  }
}
node {
  name: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  op: "ScalarSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full/tags"
  input: "enqueue_input/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "random_shuffle_queue_DequeueUpTo"
  op: "QueueDequeueUpToV2"
  input: "enqueue_input/random_shuffle_queue"
  input: "random_shuffle_queue_DequeueUpTo/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_0/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_0/Initializer/random_uniform/max"
  input: "device_dummy_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_0/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_0/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_0/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_0/Initializer/random_uniform/mul"
  input: "device_dummy_0/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_0"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_0/Assign"
  op: "Assign"
  input: "device_dummy_0"
  input: "device_dummy_0/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_0/read"
  op: "Identity"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_1/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_1/Initializer/random_uniform/max"
  input: "device_dummy_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_1/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_1/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_1/Initializer/random_uniform/mul"
  input: "device_dummy_1/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_1/Assign"
  op: "Assign"
  input: "device_dummy_1"
  input: "device_dummy_1/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_1/read"
  op: "Identity"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_2/Initializer/random_uniform/max"
  input: "device_dummy_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_2/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_2/Initializer/random_uniform/mul"
  input: "device_dummy_2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_2"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_2/Assign"
  op: "Assign"
  input: "device_dummy_2"
  input: "device_dummy_2/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_2/read"
  op: "Identity"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_3/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_3/Initializer/random_uniform/max"
  input: "device_dummy_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_3/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_3/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_3/Initializer/random_uniform/mul"
  input: "device_dummy_3/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_3"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_3/Assign"
  op: "Assign"
  input: "device_dummy_3"
  input: "device_dummy_3/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_3/read"
  op: "Identity"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_4/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_4/Initializer/random_uniform/max"
  input: "device_dummy_4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_4/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_4/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_4/Initializer/random_uniform/mul"
  input: "device_dummy_4/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_4"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_4/Assign"
  op: "Assign"
  input: "device_dummy_4"
  input: "device_dummy_4/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_4/read"
  op: "Identity"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_5/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_5/Initializer/random_uniform/max"
  input: "device_dummy_5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_5/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_5/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_5/Initializer/random_uniform/mul"
  input: "device_dummy_5/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_5"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_5/Assign"
  op: "Assign"
  input: "device_dummy_5"
  input: "device_dummy_5/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_5/read"
  op: "Identity"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_6/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_6/Initializer/random_uniform/max"
  input: "device_dummy_6/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_6/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_6/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_6/Initializer/random_uniform/mul"
  input: "device_dummy_6/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_6"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_6/Assign"
  op: "Assign"
  input: "device_dummy_6"
  input: "device_dummy_6/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_6/read"
  op: "Identity"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_7/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_7/Initializer/random_uniform/max"
  input: "device_dummy_7/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_7/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_7/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_7/Initializer/random_uniform/mul"
  input: "device_dummy_7/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_7"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_7/Assign"
  op: "Assign"
  input: "device_dummy_7"
  input: "device_dummy_7/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_7/read"
  op: "Identity"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_8/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_8/Initializer/random_uniform/max"
  input: "device_dummy_8/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_8/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_8/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_8/Initializer/random_uniform/mul"
  input: "device_dummy_8/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_8"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_8/Assign"
  op: "Assign"
  input: "device_dummy_8"
  input: "device_dummy_8/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_8/read"
  op: "Identity"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.7320508
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "device_dummy_9/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/sub"
  op: "Sub"
  input: "device_dummy_9/Initializer/random_uniform/max"
  input: "device_dummy_9/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform/mul"
  op: "Mul"
  input: "device_dummy_9/Initializer/random_uniform/RandomUniform"
  input: "device_dummy_9/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9/Initializer/random_uniform"
  op: "Add"
  input: "device_dummy_9/Initializer/random_uniform/mul"
  input: "device_dummy_9/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "device_dummy_9"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "device_dummy_9/Assign"
  op: "Assign"
  input: "device_dummy_9"
  input: "device_dummy_9/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "device_dummy_9/read"
  op: "Identity"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "stats-0"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-0/"
    }
  }
}
node {
  name: "stats-0/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-0/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-0"
  input: "stats-0/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-0/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-0/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-0"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-0/"
    }
  }
}
node {
  name: "tree-0/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-0/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-0"
  input: "tree-0/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-0/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-0/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-1"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-1/"
    }
  }
}
node {
  name: "stats-1/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-1/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-1"
  input: "stats-1/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-1/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-1/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-1"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-1/"
    }
  }
}
node {
  name: "tree-1/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-1/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-1"
  input: "tree-1/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-1/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-1/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-2"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-2/"
    }
  }
}
node {
  name: "stats-2/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-2/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-2"
  input: "stats-2/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-2/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-2/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-2"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-2/"
    }
  }
}
node {
  name: "tree-2/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-2/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-2"
  input: "tree-2/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-2/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-2/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-3"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-3/"
    }
  }
}
node {
  name: "stats-3/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-3/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-3"
  input: "stats-3/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-3/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-3/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-3"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-3/"
    }
  }
}
node {
  name: "tree-3/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-3/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-3"
  input: "tree-3/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-3/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-3/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-4"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-4/"
    }
  }
}
node {
  name: "stats-4/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-4/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-4"
  input: "stats-4/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-4/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-4/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-4"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-4/"
    }
  }
}
node {
  name: "tree-4/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-4/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-4"
  input: "tree-4/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-4/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-4/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-5"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-5/"
    }
  }
}
node {
  name: "stats-5/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-5/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-5"
  input: "stats-5/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-5/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-5/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-5"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-5/"
    }
  }
}
node {
  name: "tree-5/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-5/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-5"
  input: "tree-5/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-5/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-5/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-6"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-6/"
    }
  }
}
node {
  name: "stats-6/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-6/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-6"
  input: "stats-6/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-6/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-6/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-6"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-6/"
    }
  }
}
node {
  name: "tree-6/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-6/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-6"
  input: "tree-6/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-6/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-6/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-7"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-7/"
    }
  }
}
node {
  name: "stats-7/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-7/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-7"
  input: "stats-7/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-7/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-7/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-7"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-7/"
    }
  }
}
node {
  name: "tree-7/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-7/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-7"
  input: "tree-7/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-7/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-7/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-8"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-8/"
    }
  }
}
node {
  name: "stats-8/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-8/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-8"
  input: "stats-8/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-8/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-8/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-8"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-8/"
    }
  }
}
node {
  name: "tree-8/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-8/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-8"
  input: "tree-8/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-8/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-8/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-9"
  op: "FertileStatsResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "stats-9/"
    }
  }
}
node {
  name: "stats-9/CreateFertileStatsVariable/stats_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "stats-9/CreateFertileStatsVariable"
  op: "CreateFertileStatsVariable"
  input: "stats-9"
  input: "stats-9/CreateFertileStatsVariable/stats_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stats-9/FertileStatsIsInitializedOp"
  op: "FertileStatsIsInitializedOp"
  input: "stats-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stats-9/FertileStatsSerialize"
  op: "FertileStatsSerialize"
  input: "stats-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-9"
  op: "DecisionTreeResourceHandleOp"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tree-9/"
    }
  }
}
node {
  name: "tree-9/CreateTreeVariable/tree_config"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "tree-9/CreateTreeVariable"
  op: "CreateTreeVariable"
  input: "tree-9"
  input: "tree-9/CreateTreeVariable/tree_config"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "tree-9/TreeIsInitializedOp"
  op: "TreeIsInitializedOp"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tree-9/TreeSerialize"
  op: "TreeSerialize"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "random_shuffle_queue_DequeueUpTo:2"
  input: "random_shuffle_queue_DequeueUpTo:3"
  input: "random_shuffle_queue_DequeueUpTo:4"
  input: "random_shuffle_queue_DequeueUpTo:5"
  input: "random_shuffle_queue_DequeueUpTo:6"
  input: "random_shuffle_queue_DequeueUpTo:7"
  input: "random_shuffle_queue_DequeueUpTo:8"
  input: "random_shuffle_queue_DequeueUpTo:9"
  input: "random_shuffle_queue_DequeueUpTo:10"
  input: "random_shuffle_queue_DequeueUpTo:11"
  input: "random_shuffle_queue_DequeueUpTo:12"
  input: "random_shuffle_queue_DequeueUpTo:13"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4"
  op: "TreePredictionsV4"
  input: "tree-0"
  input: "concat"
  input: "TreePredictionsV4/sparse_input_indices"
  input: "TreePredictionsV4/sparse_input_values"
  input: "TreePredictionsV4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_1"
  op: "TreePredictionsV4"
  input: "tree-1"
  input: "concat"
  input: "TreePredictionsV4_1/sparse_input_indices"
  input: "TreePredictionsV4_1/sparse_input_values"
  input: "TreePredictionsV4_1/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_2"
  op: "TreePredictionsV4"
  input: "tree-2"
  input: "concat"
  input: "TreePredictionsV4_2/sparse_input_indices"
  input: "TreePredictionsV4_2/sparse_input_values"
  input: "TreePredictionsV4_2/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_3"
  op: "TreePredictionsV4"
  input: "tree-3"
  input: "concat"
  input: "TreePredictionsV4_3/sparse_input_indices"
  input: "TreePredictionsV4_3/sparse_input_values"
  input: "TreePredictionsV4_3/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_4"
  op: "TreePredictionsV4"
  input: "tree-4"
  input: "concat"
  input: "TreePredictionsV4_4/sparse_input_indices"
  input: "TreePredictionsV4_4/sparse_input_values"
  input: "TreePredictionsV4_4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_5"
  op: "TreePredictionsV4"
  input: "tree-5"
  input: "concat"
  input: "TreePredictionsV4_5/sparse_input_indices"
  input: "TreePredictionsV4_5/sparse_input_values"
  input: "TreePredictionsV4_5/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_6"
  op: "TreePredictionsV4"
  input: "tree-6"
  input: "concat"
  input: "TreePredictionsV4_6/sparse_input_indices"
  input: "TreePredictionsV4_6/sparse_input_values"
  input: "TreePredictionsV4_6/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_7"
  op: "TreePredictionsV4"
  input: "tree-7"
  input: "concat"
  input: "TreePredictionsV4_7/sparse_input_indices"
  input: "TreePredictionsV4_7/sparse_input_values"
  input: "TreePredictionsV4_7/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_8"
  op: "TreePredictionsV4"
  input: "tree-8"
  input: "concat"
  input: "TreePredictionsV4_8/sparse_input_indices"
  input: "TreePredictionsV4_8/sparse_input_values"
  input: "TreePredictionsV4_8/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_values"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9/sparse_input_shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TreePredictionsV4_9"
  op: "TreePredictionsV4"
  input: "tree-9"
  input: "concat"
  input: "TreePredictionsV4_9/sparse_input_indices"
  input: "TreePredictionsV4_9/sparse_input_values"
  input: "TreePredictionsV4_9/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "TreePredictionsV4"
  input: "TreePredictionsV4_1"
  input: "TreePredictionsV4_2"
  input: "TreePredictionsV4_3"
  input: "TreePredictionsV4_4"
  input: "TreePredictionsV4_5"
  input: "TreePredictionsV4_6"
  input: "TreePredictionsV4_7"
  input: "TreePredictionsV4_8"
  input: "TreePredictionsV4_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "stack"
  input: "Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "probabilities/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "probabilities"
  op: "RealDiv"
  input: "Sum"
  input: "probabilities/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "TreePredictionsV4:1"
  input: "TreePredictionsV4_1:1"
  input: "TreePredictionsV4_2:1"
  input: "TreePredictionsV4_3:1"
  input: "TreePredictionsV4_4:1"
  input: "TreePredictionsV4_5:1"
  input: "TreePredictionsV4_6:1"
  input: "TreePredictionsV4_7:1"
  input: "TreePredictionsV4_8:1"
  input: "TreePredictionsV4_9:1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "stack"
  input: "stack"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 10
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "mul"
  input: "Sum_1/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "div/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "div"
  op: "RealDiv"
  input: "Sum_1"
  input: "div/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "probabilities"
  input: "probabilities"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "div"
  input: "mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Maximum/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Maximum"
  op: "Maximum"
  input: "Maximum/x"
  input: "sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "TreeSize"
  op: "TreeSize"
  input: "tree-0"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_1"
  op: "TreeSize"
  input: "tree-1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_2"
  op: "TreeSize"
  input: "tree-2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_3"
  op: "TreeSize"
  input: "tree-3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_4"
  op: "TreeSize"
  input: "tree-4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_5"
  op: "TreeSize"
  input: "tree-5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_6"
  op: "TreeSize"
  input: "tree-6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_7"
  op: "TreeSize"
  input: "tree-7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_8"
  op: "TreeSize"
  input: "tree-8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "TreeSize_9"
  op: "TreeSize"
  input: "tree-9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "TreeSize"
  input: "TreeSize_1"
  input: "TreeSize_2"
  input: "TreeSize_3"
  input: "TreeSize_4"
  input: "TreeSize_5"
  input: "TreeSize_6"
  input: "TreeSize_7"
  input: "TreeSize_8"
  input: "TreeSize_9"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "ToFloat"
  op: "Cast"
  input: "stack_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "ToFloat"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "average_tree_size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "average_tree_size"
      }
    }
  }
}
node {
  name: "average_tree_size"
  op: "ScalarSummary"
  input: "average_tree_size/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  input: "^probabilities"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "random_shuffle_queue_DequeueUpTo:1"
  input: "random_shuffle_queue_DequeueUpTo:2"
  input: "random_shuffle_queue_DequeueUpTo:3"
  input: "random_shuffle_queue_DequeueUpTo:4"
  input: "random_shuffle_queue_DequeueUpTo:5"
  input: "random_shuffle_queue_DequeueUpTo:6"
  input: "random_shuffle_queue_DequeueUpTo:7"
  input: "random_shuffle_queue_DequeueUpTo:8"
  input: "random_shuffle_queue_DequeueUpTo:9"
  input: "random_shuffle_queue_DequeueUpTo:10"
  input: "random_shuffle_queue_DequeueUpTo:11"
  input: "random_shuffle_queue_DequeueUpTo:12"
  input: "random_shuffle_queue_DequeueUpTo:13"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "ToFloat_1"
  op: "Cast"
  input: "random_shuffle_queue_DequeueUpTo:14"
  input: "^probabilities"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ToInt32/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4"
  op: "TraverseTreeV4"
  input: "tree-0"
  input: "concat_1"
  input: "TraverseTreeV4/sparse_input_indices"
  input: "TraverseTreeV4/sparse_input_values"
  input: "TraverseTreeV4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4"
  op: "UpdateModelV4"
  input: "tree-0"
  input: "TraverseTreeV4"
  input: "ToFloat_1"
  input: "UpdateModelV4/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4"
  op: "ProcessInputV4"
  input: "tree-0"
  input: "stats-0"
  input: "concat_1"
  input: "ProcessInputV4/sparse_input_indices"
  input: "ProcessInputV4/sparse_input_values"
  input: "ProcessInputV4/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4/input_weights"
  input: "TraverseTreeV4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4"
  op: "GrowTreeV4"
  input: "tree-0"
  input: "stats-0"
  input: "ProcessInputV4"
  input: "^UpdateModelV4"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_1/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_1"
  op: "TraverseTreeV4"
  input: "tree-1"
  input: "concat_1"
  input: "TraverseTreeV4_1/sparse_input_indices"
  input: "TraverseTreeV4_1/sparse_input_values"
  input: "TraverseTreeV4_1/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_1/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_1"
  op: "UpdateModelV4"
  input: "tree-1"
  input: "TraverseTreeV4_1"
  input: "ToFloat_1"
  input: "UpdateModelV4_1/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_1"
  op: "ProcessInputV4"
  input: "tree-1"
  input: "stats-1"
  input: "concat_1"
  input: "ProcessInputV4_1/sparse_input_indices"
  input: "ProcessInputV4_1/sparse_input_values"
  input: "ProcessInputV4_1/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_1/input_weights"
  input: "TraverseTreeV4_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_1"
  op: "GrowTreeV4"
  input: "tree-1"
  input: "stats-1"
  input: "ProcessInputV4_1"
  input: "^UpdateModelV4_1"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_2/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_2"
  op: "TraverseTreeV4"
  input: "tree-2"
  input: "concat_1"
  input: "TraverseTreeV4_2/sparse_input_indices"
  input: "TraverseTreeV4_2/sparse_input_values"
  input: "TraverseTreeV4_2/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_2/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_2"
  op: "UpdateModelV4"
  input: "tree-2"
  input: "TraverseTreeV4_2"
  input: "ToFloat_1"
  input: "UpdateModelV4_2/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_2"
  op: "ProcessInputV4"
  input: "tree-2"
  input: "stats-2"
  input: "concat_1"
  input: "ProcessInputV4_2/sparse_input_indices"
  input: "ProcessInputV4_2/sparse_input_values"
  input: "ProcessInputV4_2/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_2/input_weights"
  input: "TraverseTreeV4_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_2"
  op: "GrowTreeV4"
  input: "tree-2"
  input: "stats-2"
  input: "ProcessInputV4_2"
  input: "^UpdateModelV4_2"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_3/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_3"
  op: "TraverseTreeV4"
  input: "tree-3"
  input: "concat_1"
  input: "TraverseTreeV4_3/sparse_input_indices"
  input: "TraverseTreeV4_3/sparse_input_values"
  input: "TraverseTreeV4_3/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_3/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_3"
  op: "UpdateModelV4"
  input: "tree-3"
  input: "TraverseTreeV4_3"
  input: "ToFloat_1"
  input: "UpdateModelV4_3/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_3"
  op: "ProcessInputV4"
  input: "tree-3"
  input: "stats-3"
  input: "concat_1"
  input: "ProcessInputV4_3/sparse_input_indices"
  input: "ProcessInputV4_3/sparse_input_values"
  input: "ProcessInputV4_3/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_3/input_weights"
  input: "TraverseTreeV4_3"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_3"
  op: "GrowTreeV4"
  input: "tree-3"
  input: "stats-3"
  input: "ProcessInputV4_3"
  input: "^UpdateModelV4_3"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_4/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_4"
  op: "TraverseTreeV4"
  input: "tree-4"
  input: "concat_1"
  input: "TraverseTreeV4_4/sparse_input_indices"
  input: "TraverseTreeV4_4/sparse_input_values"
  input: "TraverseTreeV4_4/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_4"
  op: "UpdateModelV4"
  input: "tree-4"
  input: "TraverseTreeV4_4"
  input: "ToFloat_1"
  input: "UpdateModelV4_4/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_4"
  op: "ProcessInputV4"
  input: "tree-4"
  input: "stats-4"
  input: "concat_1"
  input: "ProcessInputV4_4/sparse_input_indices"
  input: "ProcessInputV4_4/sparse_input_values"
  input: "ProcessInputV4_4/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_4/input_weights"
  input: "TraverseTreeV4_4"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_4"
  op: "GrowTreeV4"
  input: "tree-4"
  input: "stats-4"
  input: "ProcessInputV4_4"
  input: "^UpdateModelV4_4"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_5/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_5"
  op: "TraverseTreeV4"
  input: "tree-5"
  input: "concat_1"
  input: "TraverseTreeV4_5/sparse_input_indices"
  input: "TraverseTreeV4_5/sparse_input_values"
  input: "TraverseTreeV4_5/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_5/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_5"
  op: "UpdateModelV4"
  input: "tree-5"
  input: "TraverseTreeV4_5"
  input: "ToFloat_1"
  input: "UpdateModelV4_5/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_5"
  op: "ProcessInputV4"
  input: "tree-5"
  input: "stats-5"
  input: "concat_1"
  input: "ProcessInputV4_5/sparse_input_indices"
  input: "ProcessInputV4_5/sparse_input_values"
  input: "ProcessInputV4_5/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_5/input_weights"
  input: "TraverseTreeV4_5"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_5"
  op: "GrowTreeV4"
  input: "tree-5"
  input: "stats-5"
  input: "ProcessInputV4_5"
  input: "^UpdateModelV4_5"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_6/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_6"
  op: "TraverseTreeV4"
  input: "tree-6"
  input: "concat_1"
  input: "TraverseTreeV4_6/sparse_input_indices"
  input: "TraverseTreeV4_6/sparse_input_values"
  input: "TraverseTreeV4_6/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_6/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_6"
  op: "UpdateModelV4"
  input: "tree-6"
  input: "TraverseTreeV4_6"
  input: "ToFloat_1"
  input: "UpdateModelV4_6/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_6"
  op: "ProcessInputV4"
  input: "tree-6"
  input: "stats-6"
  input: "concat_1"
  input: "ProcessInputV4_6/sparse_input_indices"
  input: "ProcessInputV4_6/sparse_input_values"
  input: "ProcessInputV4_6/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_6/input_weights"
  input: "TraverseTreeV4_6"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_6"
  op: "GrowTreeV4"
  input: "tree-6"
  input: "stats-6"
  input: "ProcessInputV4_6"
  input: "^UpdateModelV4_6"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_7/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_7"
  op: "TraverseTreeV4"
  input: "tree-7"
  input: "concat_1"
  input: "TraverseTreeV4_7/sparse_input_indices"
  input: "TraverseTreeV4_7/sparse_input_values"
  input: "TraverseTreeV4_7/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_7/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_7"
  op: "UpdateModelV4"
  input: "tree-7"
  input: "TraverseTreeV4_7"
  input: "ToFloat_1"
  input: "UpdateModelV4_7/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_7"
  op: "ProcessInputV4"
  input: "tree-7"
  input: "stats-7"
  input: "concat_1"
  input: "ProcessInputV4_7/sparse_input_indices"
  input: "ProcessInputV4_7/sparse_input_values"
  input: "ProcessInputV4_7/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_7/input_weights"
  input: "TraverseTreeV4_7"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_7"
  op: "GrowTreeV4"
  input: "tree-7"
  input: "stats-7"
  input: "ProcessInputV4_7"
  input: "^UpdateModelV4_7"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_8/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_8"
  op: "TraverseTreeV4"
  input: "tree-8"
  input: "concat_1"
  input: "TraverseTreeV4_8/sparse_input_indices"
  input: "TraverseTreeV4_8/sparse_input_values"
  input: "TraverseTreeV4_8/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_8/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_8"
  op: "UpdateModelV4"
  input: "tree-8"
  input: "TraverseTreeV4_8"
  input: "ToFloat_1"
  input: "UpdateModelV4_8/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_8"
  op: "ProcessInputV4"
  input: "tree-8"
  input: "stats-8"
  input: "concat_1"
  input: "ProcessInputV4_8/sparse_input_indices"
  input: "ProcessInputV4_8/sparse_input_values"
  input: "ProcessInputV4_8/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_8/input_weights"
  input: "TraverseTreeV4_8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_8"
  op: "GrowTreeV4"
  input: "tree-8"
  input: "stats-8"
  input: "ProcessInputV4_8"
  input: "^UpdateModelV4_8"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ToInt32_9/x"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "TraverseTreeV4_9"
  op: "TraverseTreeV4"
  input: "tree-9"
  input: "concat_1"
  input: "TraverseTreeV4_9/sparse_input_indices"
  input: "TraverseTreeV4_9/sparse_input_values"
  input: "TraverseTreeV4_9/sparse_input_shape"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "UpdateModelV4_9/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "UpdateModelV4_9"
  op: "UpdateModelV4"
  input: "tree-9"
  input: "TraverseTreeV4_9"
  input: "ToFloat_1"
  input: "UpdateModelV4_9/input_weights"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_indices"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_values"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/sparse_input_shape"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9/input_weights"
  op: "Const"
  input: "^probabilities"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "ProcessInputV4_9"
  op: "ProcessInputV4"
  input: "tree-9"
  input: "stats-9"
  input: "concat_1"
  input: "ProcessInputV4_9/sparse_input_indices"
  input: "ProcessInputV4_9/sparse_input_values"
  input: "ProcessInputV4_9/sparse_input_shape"
  input: "ToFloat_1"
  input: "ProcessInputV4_9/input_weights"
  input: "TraverseTreeV4_9"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "input_spec"
    value {
      s: "dense_features_size: 13 dense: [{name: left_sensors_pct original_type: 0 size: 1}{name: plank_1_com_y original_type: 0 size: 1}{name: plank_1_std original_type: 0 size: 1}{name: plank_2_com_y original_type: 0 size: 1}{name: plank_2_std original_type: 0 size: 1}{name: plank_3_com_y original_type: 0 size: 1}{name: plank_3_dev_bucket original_type: 0 size: 1}{name: plank_3_std original_type: 0 size: 1}{name: plank_4_com_y original_type: 0 size: 1}{name: plank_4_dev_bucket original_type: 0 size: 1}{name: plank_4_std original_type: 0 size: 1}{name: plank_4_wrt_3_2 original_type: 0 size: 1}{name: y_errors original_type: 0 size: 1}] sparse: []"
    }
  }
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
  attr {
    key: "random_seed"
    value {
      i: 0
    }
  }
}
node {
  name: "GrowTreeV4_9"
  op: "GrowTreeV4"
  input: "tree-9"
  input: "stats-9"
  input: "ProcessInputV4_9"
  input: "^UpdateModelV4_9"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "train"
  op: "NoOp"
  input: "^GrowTreeV4"
  input: "^GrowTreeV4_1"
  input: "^GrowTreeV4_2"
  input: "^GrowTreeV4_3"
  input: "^GrowTreeV4_4"
  input: "^GrowTreeV4_5"
  input: "^GrowTreeV4_6"
  input: "^GrowTreeV4_7"
  input: "^GrowTreeV4_8"
  input: "^GrowTreeV4_9"
  input: "^probabilities"
  device: "/device:CPU:0"
}
node {
  name: "AssignAdd/value"
  op: "Const"
  input: "^probabilities"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "group_deps/NoOp"
  op: "NoOp"
  input: "^AssignAdd"
  input: "^probabilities"
}
node {
  name: "group_deps/NoOp_1"
  op: "NoOp"
  input: "^probabilities"
  input: "^train"
  device: "/device:CPU:0"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^group_deps/NoOp"
  input: "^group_deps/NoOp_1"
  input: "^probabilities"
}
node {
  name: "DestroyResourceOp"
  op: "DestroyResourceOp"
  input: "tree-0"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_1"
  op: "DestroyResourceOp"
  input: "tree-1"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_2"
  op: "DestroyResourceOp"
  input: "tree-2"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_3"
  op: "DestroyResourceOp"
  input: "tree-3"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_4"
  op: "DestroyResourceOp"
  input: "tree-4"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_5"
  op: "DestroyResourceOp"
  input: "tree-5"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_6"
  op: "DestroyResourceOp"
  input: "tree-6"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_7"
  op: "DestroyResourceOp"
  input: "tree-7"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_8"
  op: "DestroyResourceOp"
  input: "tree-8"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_9"
  op: "DestroyResourceOp"
  input: "tree-9"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_10"
  op: "DestroyResourceOp"
  input: "stats-0"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_11"
  op: "DestroyResourceOp"
  input: "stats-1"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_12"
  op: "DestroyResourceOp"
  input: "stats-2"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_13"
  op: "DestroyResourceOp"
  input: "stats-3"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_14"
  op: "DestroyResourceOp"
  input: "stats-4"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_15"
  op: "DestroyResourceOp"
  input: "stats-5"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_16"
  op: "DestroyResourceOp"
  input: "stats-6"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_17"
  op: "DestroyResourceOp"
  input: "stats-7"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_18"
  op: "DestroyResourceOp"
  input: "stats-8"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "DestroyResourceOp_19"
  op: "DestroyResourceOp"
  input: "stats-9"
  attr {
    key: "ignore_lookup_error"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^DestroyResourceOp"
  input: "^DestroyResourceOp_1"
  input: "^DestroyResourceOp_10"
  input: "^DestroyResourceOp_11"
  input: "^DestroyResourceOp_12"
  input: "^DestroyResourceOp_13"
  input: "^DestroyResourceOp_14"
  input: "^DestroyResourceOp_15"
  input: "^DestroyResourceOp_16"
  input: "^DestroyResourceOp_17"
  input: "^DestroyResourceOp_18"
  input: "^DestroyResourceOp_19"
  input: "^DestroyResourceOp_2"
  input: "^DestroyResourceOp_3"
  input: "^DestroyResourceOp_4"
  input: "^DestroyResourceOp_5"
  input: "^DestroyResourceOp_6"
  input: "^DestroyResourceOp_7"
  input: "^DestroyResourceOp_8"
  input: "^DestroyResourceOp_9"
}
node {
  name: "multi_class_head/predictions/classes/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/predictions/classes"
  op: "ArgMax"
  input: "probabilities"
  input: "multi_class_head/predictions/classes/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "multi_class_head/predictions/probabilities"
  op: "Softmax"
  input: "probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/Squeeze"
  op: "Squeeze"
  input: "random_shuffle_queue_DequeueUpTo:14"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/Shape"
  op: "Shape"
  input: "multi_class_head/softmax_cross_entropy_loss/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "probabilities"
  input: "multi_class_head/softmax_cross_entropy_loss/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/ExpandDims"
  op: "ExpandDims"
  input: "multi_class_head/softmax_cross_entropy_loss"
  input: "multi_class_head/softmax_cross_entropy_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "multi_class_head/softmax_cross_entropy_loss/loss"
  op: "Mean"
  input: "multi_class_head/softmax_cross_entropy_loss/ExpandDims"
  input: "multi_class_head/softmax_cross_entropy_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "multi_class_head/softmax_cross_entropy_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/Shape"
  op: "Shape"
  input: "probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/strided_slice"
  op: "StridedSlice"
  input: "multi_class_head/Shape"
  input: "multi_class_head/strided_slice/stack"
  input: "multi_class_head/strided_slice/stack_1"
  input: "multi_class_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/mean/total"
  input: "multi_class_head/metrics/mean/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/total/read"
  op: "Identity"
  input: "multi_class_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/mean/count"
  input: "multi_class_head/metrics/mean/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/count/read"
  op: "Identity"
  input: "multi_class_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/ToFloat"
  op: "Cast"
  input: "multi_class_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Sum"
  op: "Sum"
  input: "multi_class_head/softmax_cross_entropy_loss/loss"
  input: "multi_class_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "multi_class_head/metrics/mean/total"
  input: "multi_class_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "multi_class_head/metrics/mean/count"
  input: "multi_class_head/metrics/mean/ToFloat"
  input: "^multi_class_head/softmax_cross_entropy_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Maximum"
  op: "Maximum"
  input: "multi_class_head/metrics/mean/count/read"
  input: "multi_class_head/metrics/mean/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/value"
  op: "DivNoNan"
  input: "multi_class_head/metrics/mean/total/read"
  input: "multi_class_head/metrics/mean/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/Maximum_1"
  op: "Maximum"
  input: "multi_class_head/metrics/mean/AssignAdd_1"
  input: "multi_class_head/metrics/mean/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/mean/update_op"
  op: "DivNoNan"
  input: "multi_class_head/metrics/mean/AssignAdd"
  input: "multi_class_head/metrics/mean/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/remove_squeezable_dimensions/Squeeze"
  op: "Squeeze"
  input: "random_shuffle_queue_DequeueUpTo:14"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: -1
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/Equal"
  op: "Equal"
  input: "multi_class_head/predictions/classes"
  input: "multi_class_head/metrics/remove_squeezable_dimensions/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/ToFloat"
  op: "Cast"
  input: "multi_class_head/metrics/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/accuracy/total"
  input: "multi_class_head/metrics/accuracy/total/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/total/read"
  op: "Identity"
  input: "multi_class_head/metrics/accuracy/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/Assign"
  op: "Assign"
  input: "multi_class_head/metrics/accuracy/count"
  input: "multi_class_head/metrics/accuracy/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/count/read"
  op: "Identity"
  input: "multi_class_head/metrics/accuracy/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Size"
  op: "Size"
  input: "multi_class_head/metrics/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/ToFloat"
  op: "Cast"
  input: "multi_class_head/metrics/accuracy/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Sum"
  op: "Sum"
  input: "multi_class_head/metrics/ToFloat"
  input: "multi_class_head/metrics/accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/AssignAdd"
  op: "AssignAdd"
  input: "multi_class_head/metrics/accuracy/total"
  input: "multi_class_head/metrics/accuracy/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/AssignAdd_1"
  op: "AssignAdd"
  input: "multi_class_head/metrics/accuracy/count"
  input: "multi_class_head/metrics/accuracy/ToFloat"
  input: "^multi_class_head/metrics/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Maximum"
  op: "Maximum"
  input: "multi_class_head/metrics/accuracy/count/read"
  input: "multi_class_head/metrics/accuracy/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/value"
  op: "DivNoNan"
  input: "multi_class_head/metrics/accuracy/total/read"
  input: "multi_class_head/metrics/accuracy/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Maximum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/Maximum_1"
  op: "Maximum"
  input: "multi_class_head/metrics/accuracy/AssignAdd_1"
  input: "multi_class_head/metrics/accuracy/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/metrics/accuracy/update_op"
  op: "DivNoNan"
  input: "multi_class_head/metrics/accuracy/AssignAdd"
  input: "multi_class_head/metrics/accuracy/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Shape"
  op: "Shape"
  input: "multi_class_head/predictions/probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice"
  op: "StridedSlice"
  input: "multi_class_head/_classification_output_alternatives/Shape"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Shape_1"
  op: "Shape"
  input: "multi_class_head/predictions/probabilities"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/strided_slice_1"
  op: "StridedSlice"
  input: "multi_class_head/_classification_output_alternatives/Shape_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_1"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/range"
  op: "Range"
  input: "multi_class_head/_classification_output_alternatives/range/start"
  input: "multi_class_head/_classification_output_alternatives/strided_slice_1"
  input: "multi_class_head/_classification_output_alternatives/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/ExpandDims"
  op: "ExpandDims"
  input: "multi_class_head/_classification_output_alternatives/range"
  input: "multi_class_head/_classification_output_alternatives/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile/multiples/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile/multiples"
  op: "Pack"
  input: "multi_class_head/_classification_output_alternatives/strided_slice"
  input: "multi_class_head/_classification_output_alternatives/Tile/multiples/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/Tile"
  op: "Tile"
  input: "multi_class_head/_classification_output_alternatives/ExpandDims"
  input: "multi_class_head/_classification_output_alternatives/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "multi_class_head/_classification_output_alternatives/classes_tensor"
  op: "AsString"
  input: "multi_class_head/_classification_output_alternatives/Tile"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "fill"
    value {
      s: ""
    }
  }
  attr {
    key: "precision"
    value {
      i: -1
    }
  }
  attr {
    key: "scientific"
    value {
      b: false
    }
  }
  attr {
    key: "shortest"
    value {
      b: false
    }
  }
  attr {
    key: "width"
    value {
      i: -1
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^device_dummy_0/Assign"
  input: "^device_dummy_1/Assign"
  input: "^device_dummy_2/Assign"
  input: "^device_dummy_3/Assign"
  input: "^device_dummy_4/Assign"
  input: "^device_dummy_5/Assign"
  input: "^device_dummy_6/Assign"
  input: "^device_dummy_7/Assign"
  input: "^device_dummy_8/Assign"
  input: "^device_dummy_9/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^stats-0/CreateFertileStatsVariable"
  input: "^stats-1/CreateFertileStatsVariable"
  input: "^stats-2/CreateFertileStatsVariable"
  input: "^stats-3/CreateFertileStatsVariable"
  input: "^stats-4/CreateFertileStatsVariable"
  input: "^stats-5/CreateFertileStatsVariable"
  input: "^stats-6/CreateFertileStatsVariable"
  input: "^stats-7/CreateFertileStatsVariable"
  input: "^stats-8/CreateFertileStatsVariable"
  input: "^stats-9/CreateFertileStatsVariable"
  input: "^tree-0/CreateTreeVariable"
  input: "^tree-1/CreateTreeVariable"
  input: "^tree-2/CreateTreeVariable"
  input: "^tree-3/CreateTreeVariable"
  input: "^tree-4/CreateTreeVariable"
  input: "^tree-5/CreateTreeVariable"
  input: "^tree-6/CreateTreeVariable"
  input: "^tree-7/CreateTreeVariable"
  input: "^tree-8/CreateTreeVariable"
  input: "^tree-9/CreateTreeVariable"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_2/NoOp"
  op: "NoOp"
  input: "^init"
}
node {
  name: "group_deps_2/NoOp_1"
  op: "NoOp"
  input: "^init_1"
  device: "/device:CPU:0"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^group_deps_2/NoOp"
  input: "^group_deps_2/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/accuracy/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "multi_class_head/metrics/accuracy/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@multi_class_head/metrics/accuracy/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 15
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 15
          }
        }
        string_val: "global_step"
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "multi_class_head/metrics/mean/total"
        string_val: "multi_class_head/metrics/mean/count"
        string_val: "multi_class_head/metrics/accuracy/total"
        string_val: "multi_class_head/metrics/accuracy/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 15
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 15
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 15
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 15
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/stack"
  op: "Pack"
  input: "stats-0/FertileStatsIsInitializedOp"
  input: "tree-0/TreeIsInitializedOp"
  input: "stats-1/FertileStatsIsInitializedOp"
  input: "tree-1/TreeIsInitializedOp"
  input: "stats-2/FertileStatsIsInitializedOp"
  input: "tree-2/TreeIsInitializedOp"
  input: "stats-3/FertileStatsIsInitializedOp"
  input: "tree-3/TreeIsInitializedOp"
  input: "stats-4/FertileStatsIsInitializedOp"
  input: "tree-4/TreeIsInitializedOp"
  input: "stats-5/FertileStatsIsInitializedOp"
  input: "tree-5/TreeIsInitializedOp"
  input: "stats-6/FertileStatsIsInitializedOp"
  input: "tree-6/TreeIsInitializedOp"
  input: "stats-7/FertileStatsIsInitializedOp"
  input: "tree-7/TreeIsInitializedOp"
  input: "stats-8/FertileStatsIsInitializedOp"
  input: "tree-8/TreeIsInitializedOp"
  input: "stats-9/FertileStatsIsInitializedOp"
  input: "tree-9/TreeIsInitializedOp"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 20
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_resources/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 20
          }
        }
        string_val: "stats-0:0"
        string_val: "tree-0:0"
        string_val: "stats-1:0"
        string_val: "tree-1:0"
        string_val: "stats-2:0"
        string_val: "tree-2:0"
        string_val: "stats-3:0"
        string_val: "tree-3:0"
        string_val: "stats-4:0"
        string_val: "tree-4:0"
        string_val: "stats-5:0"
        string_val: "tree-5:0"
        string_val: "stats-6:0"
        string_val: "tree-6:0"
        string_val: "stats-7:0"
        string_val: "tree-7:0"
        string_val: "stats-8:0"
        string_val: "tree-8:0"
        string_val: "stats-9:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_resources/boolean_mask/strided_slice"
  input: "report_uninitialized_resources/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_resources/boolean_mask/Shape_2"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_resources/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_1"
  input: "report_uninitialized_resources/boolean_mask/concat/values_1"
  input: "report_uninitialized_resources/boolean_mask/strided_slice_2"
  input: "report_uninitialized_resources/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_resources/Const"
  input: "report_uninitialized_resources/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_resources/LogicalNot"
  input: "report_uninitialized_resources/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_resources/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_resources/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_resources/boolean_mask/Reshape"
  input: "report_uninitialized_resources/boolean_mask/Squeeze"
  input: "report_uninitialized_resources/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/boolean_mask/GatherV2"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "device_dummy_0"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "device_dummy_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "device_dummy_2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "device_dummy_3"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "device_dummy_4"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "device_dummy_5"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "device_dummy_6"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "device_dummy_7"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "device_dummy_8"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "device_dummy_9"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "global_step"
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/stack"
  op: "Pack"
  input: "stats-0/FertileStatsIsInitializedOp"
  input: "tree-0/TreeIsInitializedOp"
  input: "stats-1/FertileStatsIsInitializedOp"
  input: "tree-1/TreeIsInitializedOp"
  input: "stats-2/FertileStatsIsInitializedOp"
  input: "tree-2/TreeIsInitializedOp"
  input: "stats-3/FertileStatsIsInitializedOp"
  input: "tree-3/TreeIsInitializedOp"
  input: "stats-4/FertileStatsIsInitializedOp"
  input: "tree-4/TreeIsInitializedOp"
  input: "stats-5/FertileStatsIsInitializedOp"
  input: "tree-5/TreeIsInitializedOp"
  input: "stats-6/FertileStatsIsInitializedOp"
  input: "tree-6/TreeIsInitializedOp"
  input: "stats-7/FertileStatsIsInitializedOp"
  input: "tree-7/TreeIsInitializedOp"
  input: "stats-8/FertileStatsIsInitializedOp"
  input: "tree-8/TreeIsInitializedOp"
  input: "stats-9/FertileStatsIsInitializedOp"
  input: "tree-9/TreeIsInitializedOp"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 20
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_resources_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 20
          }
        }
        string_val: "stats-0:0"
        string_val: "tree-0:0"
        string_val: "stats-1:0"
        string_val: "tree-1:0"
        string_val: "stats-2:0"
        string_val: "tree-2:0"
        string_val: "stats-3:0"
        string_val: "tree-3:0"
        string_val: "stats-4:0"
        string_val: "tree-4:0"
        string_val: "stats-5:0"
        string_val: "tree-5:0"
        string_val: "stats-6:0"
        string_val: "tree-6:0"
        string_val: "stats-7:0"
        string_val: "tree-7:0"
        string_val: "stats-8:0"
        string_val: "tree-8:0"
        string_val: "stats-9:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_resources_1/boolean_mask/Shape"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice"
  input: "report_uninitialized_resources_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_resources_1/boolean_mask/Shape_1"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_resources_1/boolean_mask/Shape_2"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_resources_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_resources_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_resources_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_resources_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_resources_1/Const"
  input: "report_uninitialized_resources_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_resources_1/LogicalNot"
  input: "report_uninitialized_resources_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_resources_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_resources_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_resources_1/boolean_mask/Reshape"
  input: "report_uninitialized_resources_1/boolean_mask/Squeeze"
  input: "report_uninitialized_resources_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_3"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/boolean_mask/GatherV2"
  input: "concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^multi_class_head/metrics/accuracy/count/Assign"
  input: "^multi_class_head/metrics/accuracy/total/Assign"
  input: "^multi_class_head/metrics/mean/count/Assign"
  input: "^multi_class_head/metrics/mean/total/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_3"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "enqueue_input/queue/enqueue_input/random_shuffle_queuefraction_over_250_of_750_full"
  input: "average_tree_size"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_53d84c62b56e4256bda7a60523d030b3/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename_1"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename_1/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "stats-0:0"
        string_val: "stats-1:0"
        string_val: "stats-2:0"
        string_val: "stats-3:0"
        string_val: "stats-4:0"
        string_val: "stats-5:0"
        string_val: "stats-6:0"
        string_val: "stats-7:0"
        string_val: "stats-8:0"
        string_val: "stats-9:0"
        string_val: "tree-0:0"
        string_val: "tree-1:0"
        string_val: "tree-2:0"
        string_val: "tree-3:0"
        string_val: "tree-4:0"
        string_val: "tree-5:0"
        string_val: "tree-6:0"
        string_val: "tree-7:0"
        string_val: "tree-8:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "save/SaveV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2_1"
  op: "SaveV2"
  input: "save/ShardedFilename_1"
  input: "save/SaveV2_1/tensor_names"
  input: "save/SaveV2_1/shape_and_slices"
  input: "device_dummy_0"
  input: "device_dummy_1"
  input: "device_dummy_2"
  input: "device_dummy_3"
  input: "device_dummy_4"
  input: "device_dummy_5"
  input: "device_dummy_6"
  input: "device_dummy_7"
  input: "device_dummy_8"
  input: "device_dummy_9"
  input: "stats-0/FertileStatsSerialize"
  input: "stats-1/FertileStatsSerialize"
  input: "stats-2/FertileStatsSerialize"
  input: "stats-3/FertileStatsSerialize"
  input: "stats-4/FertileStatsSerialize"
  input: "stats-5/FertileStatsSerialize"
  input: "stats-6/FertileStatsSerialize"
  input: "stats-7/FertileStatsSerialize"
  input: "stats-8/FertileStatsSerialize"
  input: "stats-9/FertileStatsSerialize"
  input: "tree-0/TreeSerialize"
  input: "tree-1/TreeSerialize"
  input: "tree-2/TreeSerialize"
  input: "tree-3/TreeSerialize"
  input: "tree-4/TreeSerialize"
  input: "tree-5/TreeSerialize"
  input: "tree-6/TreeSerialize"
  input: "tree-7/TreeSerialize"
  input: "tree-8/TreeSerialize"
  input: "tree-9/TreeSerialize"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "save/control_dependency_1"
  op: "Identity"
  input: "save/ShardedFilename_1"
  input: "^save/SaveV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "save/ShardedFilename_1"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  input: "^save/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "device_dummy_0"
        string_val: "device_dummy_1"
        string_val: "device_dummy_2"
        string_val: "device_dummy_3"
        string_val: "device_dummy_4"
        string_val: "device_dummy_5"
        string_val: "device_dummy_6"
        string_val: "device_dummy_7"
        string_val: "device_dummy_8"
        string_val: "device_dummy_9"
        string_val: "stats-0:0"
        string_val: "stats-1:0"
        string_val: "stats-2:0"
        string_val: "stats-3:0"
        string_val: "stats-4:0"
        string_val: "stats-5:0"
        string_val: "stats-6:0"
        string_val: "stats-7:0"
        string_val: "stats-8:0"
        string_val: "stats-9:0"
        string_val: "tree-0:0"
        string_val: "tree-1:0"
        string_val: "tree-2:0"
        string_val: "tree-3:0"
        string_val: "tree-4:0"
        string_val: "tree-5:0"
        string_val: "tree-6:0"
        string_val: "tree-7:0"
        string_val: "tree-8:0"
        string_val: "tree-9:0"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "device_dummy_0"
  input: "save/RestoreV2_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "device_dummy_1"
  input: "save/RestoreV2_1:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "device_dummy_2"
  input: "save/RestoreV2_1:2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "device_dummy_3"
  input: "save/RestoreV2_1:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "device_dummy_4"
  input: "save/RestoreV2_1:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "device_dummy_5"
  input: "save/RestoreV2_1:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "device_dummy_6"
  input: "save/RestoreV2_1:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "device_dummy_7"
  input: "save/RestoreV2_1:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "device_dummy_8"
  input: "save/RestoreV2_1:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "device_dummy_9"
  input: "save/RestoreV2_1:9"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@device_dummy_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/FertileStatsDeserialize"
  op: "FertileStatsDeserialize"
  input: "stats-0"
  input: "save/RestoreV2_1:10"
  input: "^stats-0/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_1"
  op: "FertileStatsDeserialize"
  input: "stats-1"
  input: "save/RestoreV2_1:11"
  input: "^stats-1/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_2"
  op: "FertileStatsDeserialize"
  input: "stats-2"
  input: "save/RestoreV2_1:12"
  input: "^stats-2/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_3"
  op: "FertileStatsDeserialize"
  input: "stats-3"
  input: "save/RestoreV2_1:13"
  input: "^stats-3/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_4"
  op: "FertileStatsDeserialize"
  input: "stats-4"
  input: "save/RestoreV2_1:14"
  input: "^stats-4/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_5"
  op: "FertileStatsDeserialize"
  input: "stats-5"
  input: "save/RestoreV2_1:15"
  input: "^stats-5/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_6"
  op: "FertileStatsDeserialize"
  input: "stats-6"
  input: "save/RestoreV2_1:16"
  input: "^stats-6/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_7"
  op: "FertileStatsDeserialize"
  input: "stats-7"
  input: "save/RestoreV2_1:17"
  input: "^stats-7/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_8"
  op: "FertileStatsDeserialize"
  input: "stats-8"
  input: "save/RestoreV2_1:18"
  input: "^stats-8/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/FertileStatsDeserialize_9"
  op: "FertileStatsDeserialize"
  input: "stats-9"
  input: "save/RestoreV2_1:19"
  input: "^stats-9/CreateFertileStatsVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize"
  op: "TreeDeserialize"
  input: "tree-0"
  input: "save/RestoreV2_1:20"
  input: "^tree-0/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_1"
  op: "TreeDeserialize"
  input: "tree-1"
  input: "save/RestoreV2_1:21"
  input: "^tree-1/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_2"
  op: "TreeDeserialize"
  input: "tree-2"
  input: "save/RestoreV2_1:22"
  input: "^tree-2/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_3"
  op: "TreeDeserialize"
  input: "tree-3"
  input: "save/RestoreV2_1:23"
  input: "^tree-3/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_4"
  op: "TreeDeserialize"
  input: "tree-4"
  input: "save/RestoreV2_1:24"
  input: "^tree-4/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_5"
  op: "TreeDeserialize"
  input: "tree-5"
  input: "save/RestoreV2_1:25"
  input: "^tree-5/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_6"
  op: "TreeDeserialize"
  input: "tree-6"
  input: "save/RestoreV2_1:26"
  input: "^tree-6/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_7"
  op: "TreeDeserialize"
  input: "tree-7"
  input: "save/RestoreV2_1:27"
  input: "^tree-7/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_8"
  op: "TreeDeserialize"
  input: "tree-8"
  input: "save/RestoreV2_1:28"
  input: "^tree-8/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/TreeDeserialize_9"
  op: "TreeDeserialize"
  input: "tree-9"
  input: "save/RestoreV2_1:29"
  input: "^tree-9/CreateTreeVariable"
  device: "/device:CPU:0"
  attr {
    key: "params"
    value {
      s: "\"\007\n\005\r\000\000\000\000*\007\n\005\r\000\000\000\0000\n8\350\007`\005j\005\r\000\000 Ar\005\r\000\000zCz\005\r\244p}?\250\001\r"
    }
  }
}
node {
  name: "save/restore_shard_1"
  op: "NoOp"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/FertileStatsDeserialize"
  input: "^save/FertileStatsDeserialize_1"
  input: "^save/FertileStatsDeserialize_2"
  input: "^save/FertileStatsDeserialize_3"
  input: "^save/FertileStatsDeserialize_4"
  input: "^save/FertileStatsDeserialize_5"
  input: "^save/FertileStatsDeserialize_6"
  input: "^save/FertileStatsDeserialize_7"
  input: "^save/FertileStatsDeserialize_8"
  input: "^save/FertileStatsDeserialize_9"
  input: "^save/TreeDeserialize"
  input: "^save/TreeDeserialize_1"
  input: "^save/TreeDeserialize_2"
  input: "^save/TreeDeserialize_3"
  input: "^save/TreeDeserialize_4"
  input: "^save/TreeDeserialize_5"
  input: "^save/TreeDeserialize_6"
  input: "^save/TreeDeserialize_7"
  input: "^save/TreeDeserialize_8"
  input: "^save/TreeDeserialize_9"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/restore_shard"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/restore_shard_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
versions {
  producer: 27
}
